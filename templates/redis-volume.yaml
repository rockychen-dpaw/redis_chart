#create a volume for each workload only if redis storage is configured and also replica is 1
{{- $replicas := $.Values.redis.replicas | default 1 | int }}
{{- if and $.Values.redis.volume $.Values.redis.volume.storage  (eq $replicas 1) }}
{{- $workloads := 0 }}
{{- range $i,$workload := $.Values.redis.workloads }}
    {{- $workloads = add $workloads 1}}
{{- end }}
{{- $workload_name := "" }}
{{- $workload_index := 0 }}
{{- range $i,$workload := $.Values.redis.workloads }}
    #workload_index is 1 based
    {{- $workload_index = add $i 1 }}
    #get the workload name from releasename and workload_index
    {{- if le $workloads 1 }}
        {{- $workload_name = $.Release.Name }}
    {{- else }}
---
        {{- if le $workloads 9 }}
            {{- $workload_name = print $.Release.Name $workload_index }}
        {{- else if le $workload_index 9 }}
            {{- $workload_name = print $.Release.Name "0" $workload_index }}
        {{ else }}
            {{- $workload_name = print $.Release.Name $workload_index }}
        {{- end }}
    {{- end }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $workload_name }}-data
spec:
  accessModes:
    - {{ $.Values.redis.volume.accessMode | default "ReadWriteOnce" }}
  resources:
    requests:
      storage: {{ $.Values.redis.volume.storage}}
  storageClassName: {{ $.Values.redis.volume.storageClassName | default "managed-csi-retain" }}
  volumeMode: {{ $.Values.redis.volume.volumeMode | default "Filesystem" }}
{{- end }}
{{- end }}
